---
- name: Assert usage of systemd as an init system
  assert:
    that: ansible_service_mgr == 'systemd'
    msg: "This module only works with systemd"

#- block:
#    - name: Get latest release
#      uri:
#        url: "https://api.github.com/repos/jaegertracing/jaeger/releases/latest"
#        method: GET
#        return_content: true
#        status_code: 200
#        body_format: json
#        validate_certs: false
#        user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
#        password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
#      no_log: "{{ not lookup('env', 'ANSIBLE_DEBUG') | bool }}"
#      register: _latest_release
#      until: _latest_release.status == 200
#      retries: 5
#
#    - name: "Set jaeger version to {{ _latest_release.json.tag_name[1:] }}"
#      set_fact:
#        jaeger_version: "{{ _latest_release.json.tag_name[1:] }}"
#  when:
#    - jaeger_version == "latest"
#    - jaeger_binary_local_dir | length == 0
#    - not jaeger_skip_install
#
#- block:
#    - name: "Get checksum list"
#      set_fact:
#        __jaeger_checksums: "{{ lookup('url', 'https://github.com/jaegerproject/jaeger/releases/download/v' + jaeger_version + '/jaeger-linux-amd64-sha-256', wantlist=True) | list }}"
#      run_once: true
#
#    - name: "Get checksum for {{ go_arch }} architecture"
#      set_fact:
#        __jaeger_checksum: "{{ item.split(' ')[0] }}"
#      with_items: "{{ __jaeger_checksums }}"
#  delegate_to: localhost
#  when:
#    - jaeger_binary_local_dir | length == 0
#    - not jaeger_skip_install
